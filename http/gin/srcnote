//nolint:all
func (c *Context) reset()
func (c *Context) Copy() *Context
func (c *Context) HandlerName() string
func (c *Context) HandlerNames() []string
func (c *Context) Handler() HandlerFunc
func (c *Context) FullPath() string

// 调用链相关
func (c *Context) Next()
func (c *Context) IsAborted() bool
func (c *Context) Abort()
func (c *Context) AbortWithStatus(code int)
func (c *Context) AbortWithStatusJSON(code int, jsonObj any)
func (c *Context) AbortWithError(code int, err error) *Error

func (c *Context) Error(err error) *Error

// 贯穿一个请求的 K-V 储存系统
func (c *Context) Set(key string, value any)                                     // 设置
func (c *Context) Get(key string) (value any, exists bool)                       // 获取, exists表明是否获取到
func (c *Context) MustGet(key string) any                                        // 获取不到则报错
func (c *Context) GetString(key string) (s string)                               // Get() + 强制转换
func (c *Context) GetBool(key string) (b bool)                                   // 同上
func (c *Context) GetInt(key string) (i int)                                     // 同上
func (c *Context) GetInt64(key string) (i64 int64)                               // 同上
func (c *Context) GetUint(key string) (ui uint)                                  // 同上
func (c *Context) GetUint64(key string) (ui64 uint64)                            // 同上
func (c *Context) GetFloat64(key string) (f64 float64)                           // 同上
func (c *Context) GetTime(key string) (t time.Time)                              // 同上
func (c *Context) GetDuration(key string) (d time.Duration)                      // 同上
func (c *Context) GetStringSlice(key string) (ss []string)                       // 同上
func (c *Context) GetStringMap(key string) (sm map[string]any)                   // 同上
func (c *Context) GetStringMapString(key string) (sms map[string]string)         // 同上
func (c *Context) GetStringMapStringSlice(key string) (smss map[string][]string) // 同上

// 正则URI相关
func (c *Context) Param(key string) string    // 从正则URI中提取参数
func (c *Context) AddParam(key, value string) // 正则URI相关, 一般用不到

// 获取URL中的参数
func (c *Context) initQueryCache()                                     // 解析URL参数, 不用手动调用
func (c *Context) Query(key string) (value string)                     // 从URL参数中获取参数, 如果找不到则返回空字符串
func (c *Context) DefaultQuery(key, defaultValue string) string        // 从URL参数中获取参数, 如果找不到则返回defaultValue
func (c *Context) GetQuery(key string) (string, bool)                  // 从URL参数中获取参数, bool说明是否获取到
func (c *Context) QueryArray(key string) (values []string)             // 从URL参数中获取参数数组
func (c *Context) GetQueryArray(key string) (values []string, ok bool) // 同上
// http://www.tht.xyz/abc?dict[name]=tom&dict[age]=18&dict[phone]=xiaomi
// 对于上述URL参数的格式, Gin框架可以将 name age phone 解析成 map[string]string
// 解析的时候需要告诉Gin, 前缀为dict
func (c *Context) QueryMap(key string) (dicts map[string]string)    // 将符合Gin格式的URL参数解析为字典, 前缀为key
func (c *Context) GetQueryMap(key string) (map[string]string, bool) // 同上

// 获取URL中的参数
func (c *Context) initFormCache()
func (c *Context) PostForm(key string) (value string)
func (c *Context) DefaultPostForm(key, defaultValue string) string
func (c *Context) GetPostForm(key string) (string, bool)
func (c *Context) PostFormArray(key string) (values []string)
func (c *Context) GetPostFormArray(key string) (values []string, ok bool)
func (c *Context) PostFormMap(key string) (dicts map[string]string)
func (c *Context) GetPostFormMap(key string) (map[string]string, bool)
func (c *Context) FormFile(name string) (*multipart.FileHeader, error)
func (c *Context) MultipartForm() (*multipart.Form, error)
func (c *Context) SaveUploadedFile(file *multipart.FileHeader, dst string) error
func (c *Context) get(m map[string][]string, key string) (map[string]string, bool)

// bind的作用: 将post或者url的参数, 放到我们指定的结构体中, 并根据结构体的tag进行校验
func (c *Context) Bind(obj any) error                            // 根据GET或POST和Content-type, 自动解析post数据, 然后放到obj中并校验
func (c *Context) BindJSON(obj any) error                        // 将POST的数据按照JSON解析, 将成品放到obj中并校验
func (c *Context) BindXML(obj any) error                         // 按照XML解析POST的数据, 其它同上
func (c *Context) BindYAML(obj any) error                        // 同上
func (c *Context) BindTOML(obj interface{}) error                // 同上
func (c *Context) BindQuery(obj any) error                       // 解析URL参数, 将成品放到obj中, 然后校验
func (c *Context) BindHeader(obj any) error                      // 将header(map[string][]string)放到obj中, 然后校验
func (c *Context) BindUri(obj any) error                         // 将正则URI的参数, 映射到obj, 然后校验
func (c *Context) MustBindWith(obj any, b binding.Binding) error // 一般不用
func (c *Context) ShouldBind(obj any) error                      // Should前缀与没有Should的Bind, 唯一的不同是 "是否Abort()"
func (c *Context) ShouldBindJSON(obj any) error
func (c *Context) ShouldBindXML(obj any) error
func (c *Context) ShouldBindQuery(obj any) error
func (c *Context) ShouldBindYAML(obj any) error
func (c *Context) ShouldBindTOML(obj interface{}) error
func (c *Context) ShouldBindHeader(obj any) error
func (c *Context) ShouldBindUri(obj any) error
func (c *Context) ShouldBindWith(obj any, b binding.Binding) error
func (c *Context) ShouldBindBodyWith(obj any, bb binding.BindingBody) (err error)

func (c *Context) ClientIP() string
func (c *Context) RemoteIP() string
func (c *Context) ContentType() string // req的content-type
func (c *Context) IsWebsocket() bool
func (c *Context) requestHeader(key string) string
func (c *Context) Status(code int)
func (c *Context) Header(key, value string)                                                             // 设置resp的header
func (c *Context) GetHeader(key string) string                                                          // 获取req的header
func (c *Context) GetRawData() ([]byte, error)                                                          // 获取body的全部内容
func (c *Context) SetSameSite(samesite http.SameSite)                                                   // SameSite机制, 控制浏览器携带cookies的策略
func (c *Context) SetCookie(name, value string, maxAge int, path, domain string, secure, httpOnly bool) // 设置resp的SetCookies
func (c *Context) Cookie(name string) (string, error)                                                   // 获取req的cookies

// 向客户端写数据
func (c *Context) Render(code int, r render.Render)              // 基础函数
func (c *Context) HTML(code int, name string, obj any)           // 写HTML
func (c *Context) IndentedJSON(code int, obj any)                // 写"漂亮的"JSON
func (c *Context) SecureJSON(code int, obj any)                  // 同上
func (c *Context) JSONP(code int, obj any)                       // 同上
func (c *Context) JSON(code int, obj any)                        // 同上
func (c *Context) AsciiJSON(code int, obj any)                   // 同上
func (c *Context) PureJSON(code int, obj any)                    // 同上
func (c *Context) XML(code int, obj any)                         // 同上
func (c *Context) YAML(code int, obj any)                        // 同上
func (c *Context) TOML(code int, obj interface{})                // 同上
func (c *Context) ProtoBuf(code int, obj any)                    // 同上
func (c *Context) String(code int, format string, values ...any) // 同上

func (c *Context) Redirect(code int, location string)             // 重定向
func (c *Context) Data(code int, contentType string, data []byte) // 写二进制数据
func (c *Context) DataFromReader(code int, contentLength int64, contentType string, reader io.Reader, extraHeaders map[string]string)
func (c *Context) File(filepath string) // 将req的文件保存到filepath
func (c *Context) FileFromFS(filepath string, fs http.FileSystem)
func (c *Context) FileAttachment(filepath, filename string)
func (c *Context) SSEvent(name string, message any)
func (c *Context) Stream(step func(w io.Writer) bool) bool
func (c *Context) Negotiate(code int, config Negotiate)
func (c *Context) NegotiateFormat(offered ...string) string
func (c *Context) SetAccepted(formats ...string)
func (c *Context) Deadline() (deadline time.Time, ok bool)
func (c *Context) Done() <-chan struct{}
func (c *Context) Err() error
func (c *Context) Value(key any) any


engine.trees 格式为 {"POST": router_tree, "GET": router_tree, "DELETE": router_tree ...}
engine.trees可以通过method快速找到router_tree
func (engine *Engine) Handler() http.Handler
func (engine *Engine) allocateContext() *Context
func (engine *Engine) Delims(left, right string) *Engine
func (engine *Engine) SecureJsonPrefix(prefix string) *Engine
func (engine *Engine) LoadHTMLGlob(pattern string)
func (engine *Engine) LoadHTMLFiles(files ...string)
func (engine *Engine) SetHTMLTemplate(templ *template.Template)
func (engine *Engine) SetFuncMap(funcMap template.FuncMap)
func (engine *Engine) NoRoute(handlers ...HandlerFunc)
func (engine *Engine) NoMethod(handlers ...HandlerFunc)
func (engine *Engine) Use(middleware ...HandlerFunc) IRoutes
func (engine *Engine) rebuild404Handlers()
func (engine *Engine) rebuild405Handlers()
func (engine *Engine) addRoute(method, path string, handlers HandlersChain)
func (engine *Engine) Routes() (routes RoutesInfo)
func (engine *Engine) Run(addr ...string) (err error)
func (engine *Engine) prepareTrustedCIDRs() ([]*net.IPNet, error)
func (engine *Engine) SetTrustedProxies(trustedProxies []string) error
func (engine *Engine) isUnsafeTrustedProxies() bool
func (engine *Engine) parseTrustedProxies() error
func (engine *Engine) isTrustedProxy(ip net.IP) bool
func (engine *Engine) validateHeader(header string) (clientIP string, valid bool)
func (engine *Engine) RunTLS(addr, certFile, keyFile string) (err error)
func (engine *Engine) RunUnix(file string) (err error)
func (engine *Engine) RunFd(fd int) (err error)
func (engine *Engine) RunListener(listener net.Listener) (err error)
func (engine *Engine) ServeHTTP(w http.ResponseWriter, req *http.Request)
func (engine *Engine) HandleContext(c *Context)
func (engine *Engine) handleHTTPRequest(c *Context)




func (group *RouterGroup) Use(middleware ...HandlerFunc) IRoutes
func (group *RouterGroup) Group(relativePath string, handlers ...HandlerFunc) *RouterGroup
func (group *RouterGroup) BasePath() string
func (group *RouterGroup) handle(httpMethod, relativePath string, handlers HandlersChain) IRoutes
func (group *RouterGroup) Handle(httpMethod, relativePath string, handlers ...HandlerFunc) IRoutes
func (group *RouterGroup) POST(relativePath string, handlers ...HandlerFunc) IRoutes
func (group *RouterGroup) GET(relativePath string, handlers ...HandlerFunc) IRoutes
func (group *RouterGroup) DELETE(relativePath string, handlers ...HandlerFunc) IRoutes
func (group *RouterGroup) PATCH(relativePath string, handlers ...HandlerFunc) IRoutes
func (group *RouterGroup) PUT(relativePath string, handlers ...HandlerFunc) IRoutes
func (group *RouterGroup) OPTIONS(relativePath string, handlers ...HandlerFunc) IRoutes
func (group *RouterGroup) HEAD(relativePath string, handlers ...HandlerFunc) IRoutes
func (group *RouterGroup) Any(relativePath string, handlers ...HandlerFunc) IRoutes
func (group *RouterGroup) StaticFile(relativePath, filepath string) IRoutes
func (group *RouterGroup) StaticFileFS(relativePath, filepath string, fs http.FileSystem) IRoutes
func (group *RouterGroup) staticFileHandler(relativePath string, handler HandlerFunc) IRoutes
func (group *RouterGroup) Static(relativePath, root string) IRoutes
func (group *RouterGroup) StaticFS(relativePath string, fs http.FileSystem) IRoutes
func (group *RouterGroup) createStaticHandler(relativePath string, fs http.FileSystem) HandlerFunc
func (group *RouterGroup) combineHandlers(handlers HandlersChain) HandlersChain
func (group *RouterGroup) calculateAbsolutePath(relativePath string) string
func (group *RouterGroup) returnObj() IRoutes